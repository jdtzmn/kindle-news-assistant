from skmultiflow.core import BaseSKMObject as BaseSKMObject, ClassifierMixin as ClassifierMixin, MetaEstimatorMixin as MetaEstimatorMixin
from typing import Any, Optional

def BatchIncremental(nominal_attributes: Optional[Any] = ...): ...

class BatchIncrementalClassifier(BaseSKMObject, ClassifierMixin, MetaEstimatorMixin):
    window_size: Any = ...
    n_estimators: Any = ...
    base_estimator: Any = ...
    ensemble: Any = ...
    i: int = ...
    X_batch: Any = ...
    y_batch: Any = ...
    sample_weight: Any = ...
    def __init__(self, base_estimator: Any = ..., window_size: int = ..., n_estimators: int = ...) -> None: ...
    def partial_fit(self, X: Any, y: Optional[Any] = ..., classes: Optional[Any] = ..., sample_weight: Optional[Any] = ...): ...
    def predict_proba(self, X: Any): ...
    def predict(self, X: Any): ...
    def reset(self): ...
