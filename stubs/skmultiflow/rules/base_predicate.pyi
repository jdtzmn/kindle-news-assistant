from skmultiflow.core import BaseSKMObject as BaseSKMObject
from typing import Any, Optional

class Predicate(BaseSKMObject):
    def __init__(self, att_idx: Optional[Any] = ..., operator: Optional[Any] = ..., value: Optional[Any] = ...) -> None: ...
    @property
    def att_idx(self): ...
    @att_idx.setter
    def att_idx(self, att_idx: Any) -> None: ...
    @property
    def operator(self): ...
    @operator.setter
    def operator(self, operator: Any) -> None: ...
    @property
    def value(self): ...
    @value.setter
    def value(self, value: Any) -> None: ...
    def covers_instance(self, X: Any): ...
    def get_predicate(self): ...
    def __eq__(self, other: Any) -> Any: ...
