from skmultiflow.trees.attribute_observer import NominalAttributeClassObserver as NominalAttributeClassObserver, NumericAttributeClassObserverGaussian as NumericAttributeClassObserverGaussian
from skmultiflow.trees.attribute_split_suggestion import AttributeSplitSuggestion as AttributeSplitSuggestion
from skmultiflow.trees.nodes import SplitNode as SplitNode
from typing import Any

class AnyTimeSplitNode(SplitNode):
    def __init__(self, split_test: Any, class_observations: Any, attribute_observers: Any) -> None: ...
    def get_null_split(self, criterion: Any): ...
    def get_best_split_suggestions(self, criterion: Any, ht: Any): ...
    @staticmethod
    def find_attribute(id_att: Any, split_suggestions: Any): ...
    def learn_from_instance(self, X: Any, y: Any, weight: Any, ht: Any) -> None: ...
    def get_weight_seen(self): ...
    def get_attribute_observers(self): ...
    def get_weight_seen_at_last_split_reevaluation(self): ...
    def update_weight_seen_at_last_split_reevaluation(self) -> None: ...
    def count_nodes(self): ...
