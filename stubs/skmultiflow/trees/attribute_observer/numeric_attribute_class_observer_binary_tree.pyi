from skmultiflow.trees.attribute_observer import AttributeClassObserver as AttributeClassObserver
from skmultiflow.trees.attribute_split_suggestion import AttributeSplitSuggestion as AttributeSplitSuggestion
from skmultiflow.trees.attribute_test import NumericAttributeBinaryTest as NumericAttributeBinaryTest
from typing import Any

class NumericAttributeClassObserverBinaryTree(AttributeClassObserver):
    class Node:
        def __init__(self, val: Any, label: Any, weight: Any) -> None: ...
        def insert_value(self, val: Any, label: Any, weight: Any) -> None: ...
    def __init__(self) -> None: ...
    def observe_attribute_class(self, att_val: Any, class_val: Any, weight: Any) -> None: ...
    def probability_of_attribute_value_given_class(self, att_val: Any, class_val: Any): ...
    def get_best_evaluated_split_suggestion(self, criterion: Any, pre_split_dist: Any, att_idx: Any, binary_only: Any): ...
    def search_for_best_split_option(self, current_node: Any, current_best_option: Any, actual_parent_left: Any, parent_left: Any, parent_right: Any, left_child: Any, criterion: Any, pre_split_dist: Any, att_idx: Any): ...
