from skmultiflow.trees.attribute_observer import AttributeClassObserver as AttributeClassObserver
from skmultiflow.trees.attribute_split_suggestion import AttributeSplitSuggestion as AttributeSplitSuggestion
from skmultiflow.trees.attribute_test import NumericAttributeBinaryTest as NumericAttributeBinaryTest
from typing import Any

class NumericAttributeRegressionObserver(AttributeClassObserver):
    class Node:
        att_val: Any = ...
        sum_weight: Any = ...
        sum_target: Any = ...
        sum_sq_target: Any = ...
        def __init__(self, att_val: Any, target: Any, weight: Any) -> None: ...
        def insert_value(self, att_val: Any, target: Any, weight: Any) -> None: ...
    def __init__(self) -> None: ...
    def observe_attribute_class(self, att_val: Any, class_val: Any, weight: Any) -> None: ...
    def probability_of_attribute_value_given_class(self, att_val: Any, class_val: Any) -> None: ...
    def get_best_evaluated_split_suggestion(self, criterion: Any, pre_split_dist: Any, att_idx: Any, binary_only: bool = ...): ...
    def remove_bad_splits(self, criterion: Any, last_check_ratio: Any, last_check_sdr: Any, last_check_e: Any, pre_split_dist: Any) -> None: ...
