from skmultiflow.bayes import do_naive_bayes_prediction as do_naive_bayes_prediction
from skmultiflow.core import BaseSKMObject as BaseSKMObject, ClassifierMixin as ClassifierMixin
from skmultiflow.trees.attribute_observer import NominalAttributeClassObserver as NominalAttributeClassObserver, NumericAttributeClassObserverGaussian as NumericAttributeClassObserverGaussian
from skmultiflow.utils import get_dimensions as get_dimensions
from typing import Any, Optional

class NaiveBayes(BaseSKMObject, ClassifierMixin):
    nominal_attributes: Any = ...
    def __init__(self, nominal_attributes: Optional[Any] = ...) -> None: ...
    def partial_fit(self, X: Any, y: Any, classes: Optional[Any] = ..., sample_weight: Optional[Any] = ...): ...
    def predict(self, X: Any): ...
    def predict_proba(self, X: Any): ...
