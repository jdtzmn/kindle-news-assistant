from skmultiflow.data.random_rbf_generator import RandomRBFGenerator as RandomRBFGenerator
from skmultiflow.utils import check_random_state as check_random_state
from typing import Any, Optional

class RandomRBFGeneratorDrift(RandomRBFGenerator):
    change_speed: Any = ...
    num_drift_centroids: Any = ...
    centroid_speed: Any = ...
    name: str = ...
    def __init__(self, model_random_state: Optional[Any] = ..., sample_random_state: Optional[Any] = ..., n_classes: int = ..., n_features: int = ..., n_centroids: int = ..., change_speed: float = ..., num_drift_centroids: int = ...) -> None: ...
    current_sample_x: Any = ...
    current_sample_y: Any = ...
    def next_sample(self, batch_size: int = ...): ...
