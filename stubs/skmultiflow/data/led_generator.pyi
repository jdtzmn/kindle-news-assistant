from skmultiflow.data.base_stream import Stream as Stream
from skmultiflow.utils import check_random_state as check_random_state
from typing import Any, Optional

class LEDGenerator(Stream):
    random_state: Any = ...
    n_cat_features: Any = ...
    n_features: Any = ...
    n_targets: int = ...
    n_classes: int = ...
    name: str = ...
    feature_names: Any = ...
    target_values: Any = ...
    def __init__(self, random_state: Optional[Any] = ..., noise_percentage: float = ..., has_noise: bool = ...) -> None: ...
    @property
    def noise_percentage(self): ...
    @noise_percentage.setter
    def noise_percentage(self, noise_percentage: Any) -> None: ...
    @property
    def has_noise(self): ...
    @has_noise.setter
    def has_noise(self, has_noise: Any) -> None: ...
    current_sample_x: Any = ...
    current_sample_y: Any = ...
    def next_sample(self, batch_size: int = ...): ...
    def get_data_info(self): ...
