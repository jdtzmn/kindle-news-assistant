from skmultiflow.data.base_stream import Stream as Stream
from skmultiflow.utils import check_random_state as check_random_state
from typing import Any, Optional

class AnomalySineGenerator(Stream):
    n_samples: Any = ...
    n_anomalies: Any = ...
    contextual: Any = ...
    n_contextual: Any = ...
    shift: Any = ...
    noise: Any = ...
    replace: Any = ...
    random_state: Any = ...
    name: str = ...
    n_features: int = ...
    n_targets: int = ...
    n_num_features: int = ...
    target_names: Any = ...
    feature_names: Any = ...
    target_values: Any = ...
    def __init__(self, n_samples: int = ..., n_anomalies: int = ..., contextual: bool = ..., n_contextual: int = ..., shift: int = ..., noise: float = ..., replace: bool = ..., random_state: Optional[Any] = ...) -> None: ...
    current_sample_x: Any = ...
    current_sample_y: Any = ...
    def next_sample(self, batch_size: int = ...): ...
    def n_remaining_samples(self): ...
    def get_data_info(self): ...
    sample_idx: int = ...
    def restart(self) -> None: ...
