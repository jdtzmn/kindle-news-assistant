from skmultiflow.data.base_stream import Stream as Stream
from skmultiflow.data.data_stream import check_data_consistency as check_data_consistency
from typing import Any, Optional

class FileStream(Stream):
    filepath: Any = ...
    cat_features: Any = ...
    allow_nan: Any = ...
    X: Any = ...
    y: Any = ...
    task_type: Any = ...
    n_classes: int = ...
    filename: str = ...
    basename: str = ...
    read_function: Any = ...
    def __init__(self, filepath: Any, target_idx: int = ..., n_targets: int = ..., cat_features: Optional[Any] = ..., allow_nan: bool = ...) -> None: ...
    @property
    def target_idx(self): ...
    @target_idx.setter
    def target_idx(self, target_idx: Any) -> None: ...
    @property
    def n_targets(self): ...
    @n_targets.setter
    def n_targets(self, n_targets: Any) -> None: ...
    @property
    def cat_features_idx(self): ...
    @cat_features_idx.setter
    def cat_features_idx(self, cat_features_idx: Any) -> None: ...
    sample_idx: int = ...
    current_sample_x: Any = ...
    current_sample_y: Any = ...
    def restart(self) -> None: ...
    def next_sample(self, batch_size: int = ...): ...
    def has_more_samples(self): ...
    def n_remaining_samples(self): ...
    def get_all_samples(self): ...
    def get_data_info(self): ...
    def get_target_values(self): ...
    def get_info(self): ...
