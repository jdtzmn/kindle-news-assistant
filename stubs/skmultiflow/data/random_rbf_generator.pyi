from skmultiflow.data.base_stream import Stream as Stream
from skmultiflow.utils import check_random_state as check_random_state
from typing import Any, Optional

class RandomRBFGenerator(Stream):
    sample_random_state: Any = ...
    model_random_state: Any = ...
    n_classes: Any = ...
    n_targets: int = ...
    n_features: Any = ...
    n_num_features: Any = ...
    n_centroids: Any = ...
    centroids: Any = ...
    centroid_weights: Any = ...
    name: str = ...
    target_names: Any = ...
    feature_names: Any = ...
    target_values: Any = ...
    def __init__(self, model_random_state: Optional[Any] = ..., sample_random_state: Optional[Any] = ..., n_classes: int = ..., n_features: int = ..., n_centroids: int = ...) -> None: ...
    current_sample_x: Any = ...
    current_sample_y: Any = ...
    def next_sample(self, batch_size: int = ...): ...

class Centroid:
    centre: Any = ...
    class_label: Any = ...
    std_dev: Any = ...
    def __init__(self) -> None: ...
