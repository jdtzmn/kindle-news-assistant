from .cache import DiskCache as DiskCache, get_cache_dir as get_cache_dir
from .remote import IP_RE as IP_RE, SCHEME_RE as SCHEME_RE, looks_like_ip as looks_like_ip
from .suffix_list import get_suffix_lists as get_suffix_lists
from typing import Any, Optional

LOG: Any
CACHE_TIMEOUT: Any
PUBLIC_SUFFIX_LIST_URLS: Any

class ExtractResult:
    @property
    def registered_domain(self): ...
    @property
    def fqdn(self): ...
    @property
    def ipv4(self): ...

class TLDExtract:
    suffix_list_urls: Any = ...
    fallback_to_snapshot: Any = ...
    include_psl_private_domains: Any = ...
    extra_suffixes: Any = ...
    cache_fetch_timeout: Any = ...
    def __init__(self, cache_dir: Any = ..., suffix_list_urls: Any = ..., fallback_to_snapshot: bool = ..., include_psl_private_domains: bool = ..., extra_suffixes: Any = ..., cache_fetch_timeout: Any = ...) -> None: ...
    def __call__(self, url: Any, include_psl_private_domains: Optional[Any] = ...): ...
    def update(self, fetch_now: bool = ...) -> None: ...
    @property
    def tlds(self): ...

TLD_EXTRACTOR: Any

def extract(url: Any, include_psl_private_domains: bool = ...): ...
def update(*args: Any, **kwargs: Any): ...

class _PublicSuffixListTLDExtractor:
    include_psl_private_domains: Any = ...
    public_tlds: Any = ...
    private_tlds: Any = ...
    tlds_incl_private: Any = ...
    tlds_excl_private: Any = ...
    def __init__(self, public_tlds: Any, private_tlds: Any, extra_tlds: Any, include_psl_private_domains: bool = ...) -> None: ...
    def tlds(self, include_psl_private_domains: Optional[Any] = ...): ...
    def suffix_index(self, lower_spl: Any, include_psl_private_domains: Optional[Any] = ...): ...
