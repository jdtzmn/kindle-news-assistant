from .process_executor import ProcessPoolExecutor
from typing import Any, Optional

def get_reusable_executor(max_workers: Optional[Any] = ..., context: Optional[Any] = ..., timeout: int = ..., kill_workers: bool = ..., reuse: str = ..., job_reducers: Optional[Any] = ..., result_reducers: Optional[Any] = ..., initializer: Optional[Any] = ..., initargs: Any = ..., env: Optional[Any] = ...): ...

class _ReusablePoolExecutor(ProcessPoolExecutor):
    executor_id: Any = ...
    def __init__(self, submit_resize_lock: Any, max_workers: Optional[Any] = ..., context: Optional[Any] = ..., timeout: Optional[Any] = ..., executor_id: int = ..., job_reducers: Optional[Any] = ..., result_reducers: Optional[Any] = ..., initializer: Optional[Any] = ..., initargs: Any = ..., env: Optional[Any] = ...) -> None: ...
    @classmethod
    def get_reusable_executor(cls, max_workers: Optional[Any] = ..., context: Optional[Any] = ..., timeout: int = ..., kill_workers: bool = ..., reuse: str = ..., job_reducers: Optional[Any] = ..., result_reducers: Optional[Any] = ..., initializer: Optional[Any] = ..., initargs: Any = ..., env: Optional[Any] = ...): ...
    def submit(self, fn: Any, *args: Any, **kwargs: Any): ...
