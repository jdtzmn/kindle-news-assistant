from typing import Any, Optional

class _DupFd:
    fd: Any = ...
    def __init__(self, fd: Any) -> None: ...
    def detach(self): ...

class Popen:
    method: str = ...
    DupFd: Any = ...
    returncode: Any = ...
    def __init__(self, process_obj: Any) -> None: ...
    def duplicate_for_child(self, fd: Any): ...
    def poll(self, flag: Any = ...): ...
    def wait(self, timeout: Optional[Any] = ...): ...
    def terminate(self) -> None: ...
    @staticmethod
    def thread_is_spawning(): ...
