from typing import Any, Optional

Pickler: Any

class _ConsistentSet:
    def __init__(self, set_sequence: Any) -> None: ...

class _MyHash:
    args: Any = ...
    def __init__(self, *args: Any) -> None: ...

class Hasher(Pickler):
    stream: Any = ...
    def __init__(self, hash_name: str = ...) -> None: ...
    def hash(self, obj: Any, return_digest: bool = ...): ...
    def save(self, obj: Any) -> None: ...
    def memoize(self, obj: Any) -> None: ...
    def save_global(self, obj: Any, name: Optional[Any] = ..., pack: Any = ...) -> None: ...
    dispatch: Any = ...
    def save_set(self, set_items: Any) -> None: ...

class NumpyHasher(Hasher):
    coerce_mmap: Any = ...
    np: Any = ...
    def __init__(self, hash_name: str = ..., coerce_mmap: bool = ...) -> None: ...
    def save(self, obj: Any) -> None: ...

def hash(obj: Any, hash_name: str = ..., coerce_mmap: bool = ...): ...
