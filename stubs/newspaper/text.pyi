from .utils import FileHelper as FileHelper
from typing import Any

TABSSPACE: Any

def innerTrim(value: Any): ...

class WordStats:
    stop_word_count: int = ...
    word_count: int = ...
    stop_words: Any = ...
    def __init__(self) -> None: ...
    def get_stop_words(self): ...
    def set_stop_words(self, words: Any) -> None: ...
    def get_stopword_count(self): ...
    def set_stopword_count(self, wordcount: Any) -> None: ...
    def get_word_count(self): ...
    def set_word_count(self, cnt: Any) -> None: ...

class StopWords:
    TRANS_TABLE: Any = ...
    STOP_WORDS: Any = ...
    def __init__(self, language: str = ...) -> None: ...
    def remove_punctuation(self, content: Any): ...
    def candidate_words(self, stripped_input: Any): ...
    def get_stopword_count(self, content: Any): ...

class StopWordsChinese(StopWords):
    def __init__(self, language: str = ...) -> None: ...
    def candidate_words(self, stripped_input: Any): ...

class StopWordsArabic(StopWords):
    def __init__(self, language: str = ...) -> None: ...
    def remove_punctuation(self, content: Any): ...
    def candidate_words(self, stripped_input: Any): ...

class StopWordsKorean(StopWords):
    def __init__(self, language: str = ...) -> None: ...
    def get_stopword_count(self, content: Any): ...

class StopWordsHindi(StopWords):
    def __init__(self, language: str = ...) -> None: ...
    def get_stopword_count(self, content: Any): ...

class StopWordsJapanese(StopWords):
    def __init__(self, language: str = ...) -> None: ...
    def candidate_words(self, stripped_input: Any): ...
